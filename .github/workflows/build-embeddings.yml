name: ðŸ§  Build & Push Embeddings Preloaded (Multi-Arch)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  IMAGE_NAMESPACE: rezerbleede              # set your Docker Hub namespace
  IMAGE_NAME: embeddings-preloaded          # image repo name
  TEI_VERSION_TAG: "0.4"                    # FYI only, pinned in Dockerfile

jobs:
  build:
    name: Build and Push Multi-Arch Images
    runs-on: ubuntu-latest
    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - tag: deepseek-embed
            model_id: "deepseek-ai/deepseek-embed"
          - tag: bge-small-en-v1.5
            model_id: "BAAI/bge-small-en-v1.5"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free disk space
        run: |
          echo "Cleaning space for model layers..."
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost /usr/local/lib/android /opt/hostedtoolcache || true
          sudo apt-get clean
          docker system prune -af || true
          df -h || true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push ${{ matrix.tag }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          provenance: false
          build-args: |
            MODEL_ID=${{ matrix.model_id }}
            HF_REVISION=main
          tags: |
            ${{ env.IMAGE_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ matrix.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify manifest ${{ matrix.tag }}
        run: |
          docker buildx imagetools inspect $IMAGE_NAMESPACE/$IMAGE_NAME:${{ matrix.tag }}
